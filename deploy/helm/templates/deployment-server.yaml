apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tellery.fullname" . }}-server
  labels:
    app: {{ include "tellery.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "tellery.fullname" . }}
      release: {{ .Release.Name }}
      role: server
  template:
    metadata:
      annotations:
        checksum/config.yaml: {{ include (print $.Template.BasePath "/configmap-server.yaml") . | sha256sum }}
        {{- if .Values.server.annotations }}
{{ toYaml .Values.server.annotations | indent 8 }}
        {{- end }}
      labels:
        app: {{ include "tellery.fullname" . }}
        release: {{ .Release.Name }}
        role: server
        {{- if .Values.server.podLabels }}
{{ toYaml .Values.server.podLabels | indent 8 }}
        {{- end }}
    spec:
      affinity:
        {{- if .Values.server.affinity }}
{{ toYaml .Values.server.affinity | indent 8 }}
        {{- end }}
      {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.images.server.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.server.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "server.image" . }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.images.server.pullPolicy }}
        ports:
        - containerPort: {{ include "server.port" . }}
        env:
        - name: NODE_ENV
          value: production
{{- if .Values.server.env }}
{{ toYaml .Values.server.env | indent 8 }}
{{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "tellery.fullname" . }}-server
        livenessProbe:
          httpGet:
            path: /api/liveness
            port: {{ include "server.port" . }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.server.probeInitialDelaySeconds }}
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/readiness
            port: {{ include "server.port" . }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.server.probeInitialDelaySeconds }}
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
{{ toYaml .Values.server.resources | indent 12 }}
