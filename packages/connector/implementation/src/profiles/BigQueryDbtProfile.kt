package io.tellery.connectors.profiles

import annotations.Dbt
import com.fasterxml.jackson.annotation.JsonInclude
import com.fasterxml.jackson.annotation.JsonProperty
import com.google.gson.Gson
import io.tellery.annotations.Config
import io.tellery.connectors.BigQueryConnector
import io.tellery.entities.Profile
import java.util.*

@JsonInclude(JsonInclude.Include.NON_NULL)
@Dbt(
    type = "BigQuery",
    configs = [
        Config(
            name = "Git Url",
            type = Config.ConfigType.STRING,
            description = "The git url of your dbt repository. The format should be: git://[endpoint]:[organization_name]/[repo_name].git.",
            hint = "",
            required = false
        ),
        Config(
            name = "Dbt Project Name",
            type = Config.ConfigType.STRING,
            description = "The name of your dbt project, it should be equal with the name in dbt_project.yml.",
            hint = "",
            required = false
        ),
        Config(
            name = "Public Key",
            type = Config.ConfigType.STRING,
            description = "The public key generated by tellery for dbt repository, please copy it to the 'deploy key' in git server.",
            hint = "",
            required = false
        )
    ]
)
class BigQueryDbtProfile(profile: Profile) : BaseDbtProfile(profile) {

    private val gson = Gson()

    val method: String
    val priority: String
    val dataset: String
    val project: String

    @JsonProperty("keyfile_json")
    val keyfileJson: BigQueryConnector.BigQueryKeyBody

    init {
        this.type = "bigquery"
        this.method = "service-account-json"
        this.priority = "interactive"
        this.dataset = "tellery_dataset"
        val jsonBody = Base64.getDecoder().decode(profile.configs["Key File"]).decodeToString()
        this.keyfileJson = gson.fromJson(jsonBody, BigQueryConnector.BigQueryKeyBody::class.java)
        this.project = keyfileJson.projectId
    }
}
